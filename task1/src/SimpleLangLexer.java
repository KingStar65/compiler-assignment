// Generated from C:/Users/weigu/Downloads/123456/123456/task1/src/SimpleLang.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class SimpleLangLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		LParen=1, Comma=2, RParen=3, LBrace=4, Semicolon=5, RBrace=6, Eq=7, Less=8, 
		LessEq=9, More=10, MoreEq=11, Plus=12, Times=13, Minus=14, Assign=15, 
		Print=16, Space=17, NewLine=18, If=19, Then=20, Else=21, While=22, Do=23, 
		Repeat=24, Until=25, IntType=26, BoolType=27, UnitType=28, Main=29, BoolLit=30, 
		IntLit=31, Idfr=32, WS=33;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"LParen", "Comma", "RParen", "LBrace", "Semicolon", "RBrace", "Eq", "Less", 
			"LessEq", "More", "MoreEq", "Plus", "Times", "Minus", "Assign", "Print", 
			"Space", "NewLine", "If", "Then", "Else", "While", "Do", "Repeat", "Until", 
			"IntType", "BoolType", "UnitType", "Main", "BoolLit", "IntLit", "Idfr", 
			"WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'('", "','", "')'", "'{'", "';'", "'}'", "'=='", "'<'", "'<='", 
			"'>'", "'>='", "'+'", "'*'", "'-'", "':='", "'print'", "'space'", "'newline'", 
			"'if'", "'then'", "'else'", "'while'", "'do'", "'repeat'", "'until'", 
			"'int'", "'bool'", "'unit'", "'main'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "LParen", "Comma", "RParen", "LBrace", "Semicolon", "RBrace", "Eq", 
			"Less", "LessEq", "More", "MoreEq", "Plus", "Times", "Minus", "Assign", 
			"Print", "Space", "NewLine", "If", "Then", "Else", "While", "Do", "Repeat", 
			"Until", "IntType", "BoolType", "UnitType", "Main", "BoolLit", "IntLit", 
			"Idfr", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public SimpleLangLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "SimpleLang.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000!\u00d5\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0001\u0000\u0001"+
		"\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0003\u0001"+
		"\u0003\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001"+
		"\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001"+
		"\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\f\u0001"+
		"\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001"+
		"\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u0010\u0001"+
		"\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001"+
		"\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001"+
		"\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001"+
		"\u0013\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001"+
		"\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001"+
		"\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0017\u0001"+
		"\u0017\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0017\u0001"+
		"\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0001"+
		"\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001"+
		"\u001a\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001b\u0001"+
		"\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001"+
		"\u001c\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0001"+
		"\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0003\u001d\u00b9\b\u001d\u0001"+
		"\u001e\u0001\u001e\u0003\u001e\u00bd\b\u001e\u0001\u001e\u0001\u001e\u0005"+
		"\u001e\u00c1\b\u001e\n\u001e\f\u001e\u00c4\t\u001e\u0003\u001e\u00c6\b"+
		"\u001e\u0001\u001f\u0001\u001f\u0005\u001f\u00ca\b\u001f\n\u001f\f\u001f"+
		"\u00cd\t\u001f\u0001 \u0004 \u00d0\b \u000b \f \u00d1\u0001 \u0001 \u0000"+
		"\u0000!\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b"+
		"\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b"+
		"\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016"+
		"-\u0017/\u00181\u00193\u001a5\u001b7\u001c9\u001d;\u001e=\u001f? A!\u0001"+
		"\u0000\u0005\u0001\u000019\u0001\u000009\u0001\u0000az\u0004\u000009A"+
		"Z__az\u0003\u0000\t\n\r\r  \u00da\u0000\u0001\u0001\u0000\u0000\u0000"+
		"\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000"+
		"\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000"+
		"\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f"+
		"\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013"+
		"\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017"+
		"\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b"+
		"\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f"+
		"\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000"+
		"\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000"+
		"\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000"+
		"-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001"+
		"\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000"+
		"\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000"+
		";\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001"+
		"\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0001C\u0001\u0000\u0000"+
		"\u0000\u0003E\u0001\u0000\u0000\u0000\u0005G\u0001\u0000\u0000\u0000\u0007"+
		"I\u0001\u0000\u0000\u0000\tK\u0001\u0000\u0000\u0000\u000bM\u0001\u0000"+
		"\u0000\u0000\rO\u0001\u0000\u0000\u0000\u000fR\u0001\u0000\u0000\u0000"+
		"\u0011T\u0001\u0000\u0000\u0000\u0013W\u0001\u0000\u0000\u0000\u0015Y"+
		"\u0001\u0000\u0000\u0000\u0017\\\u0001\u0000\u0000\u0000\u0019^\u0001"+
		"\u0000\u0000\u0000\u001b`\u0001\u0000\u0000\u0000\u001db\u0001\u0000\u0000"+
		"\u0000\u001fe\u0001\u0000\u0000\u0000!k\u0001\u0000\u0000\u0000#q\u0001"+
		"\u0000\u0000\u0000%y\u0001\u0000\u0000\u0000\'|\u0001\u0000\u0000\u0000"+
		")\u0081\u0001\u0000\u0000\u0000+\u0086\u0001\u0000\u0000\u0000-\u008c"+
		"\u0001\u0000\u0000\u0000/\u008f\u0001\u0000\u0000\u00001\u0096\u0001\u0000"+
		"\u0000\u00003\u009c\u0001\u0000\u0000\u00005\u00a0\u0001\u0000\u0000\u0000"+
		"7\u00a5\u0001\u0000\u0000\u00009\u00aa\u0001\u0000\u0000\u0000;\u00b8"+
		"\u0001\u0000\u0000\u0000=\u00c5\u0001\u0000\u0000\u0000?\u00c7\u0001\u0000"+
		"\u0000\u0000A\u00cf\u0001\u0000\u0000\u0000CD\u0005(\u0000\u0000D\u0002"+
		"\u0001\u0000\u0000\u0000EF\u0005,\u0000\u0000F\u0004\u0001\u0000\u0000"+
		"\u0000GH\u0005)\u0000\u0000H\u0006\u0001\u0000\u0000\u0000IJ\u0005{\u0000"+
		"\u0000J\b\u0001\u0000\u0000\u0000KL\u0005;\u0000\u0000L\n\u0001\u0000"+
		"\u0000\u0000MN\u0005}\u0000\u0000N\f\u0001\u0000\u0000\u0000OP\u0005="+
		"\u0000\u0000PQ\u0005=\u0000\u0000Q\u000e\u0001\u0000\u0000\u0000RS\u0005"+
		"<\u0000\u0000S\u0010\u0001\u0000\u0000\u0000TU\u0005<\u0000\u0000UV\u0005"+
		"=\u0000\u0000V\u0012\u0001\u0000\u0000\u0000WX\u0005>\u0000\u0000X\u0014"+
		"\u0001\u0000\u0000\u0000YZ\u0005>\u0000\u0000Z[\u0005=\u0000\u0000[\u0016"+
		"\u0001\u0000\u0000\u0000\\]\u0005+\u0000\u0000]\u0018\u0001\u0000\u0000"+
		"\u0000^_\u0005*\u0000\u0000_\u001a\u0001\u0000\u0000\u0000`a\u0005-\u0000"+
		"\u0000a\u001c\u0001\u0000\u0000\u0000bc\u0005:\u0000\u0000cd\u0005=\u0000"+
		"\u0000d\u001e\u0001\u0000\u0000\u0000ef\u0005p\u0000\u0000fg\u0005r\u0000"+
		"\u0000gh\u0005i\u0000\u0000hi\u0005n\u0000\u0000ij\u0005t\u0000\u0000"+
		"j \u0001\u0000\u0000\u0000kl\u0005s\u0000\u0000lm\u0005p\u0000\u0000m"+
		"n\u0005a\u0000\u0000no\u0005c\u0000\u0000op\u0005e\u0000\u0000p\"\u0001"+
		"\u0000\u0000\u0000qr\u0005n\u0000\u0000rs\u0005e\u0000\u0000st\u0005w"+
		"\u0000\u0000tu\u0005l\u0000\u0000uv\u0005i\u0000\u0000vw\u0005n\u0000"+
		"\u0000wx\u0005e\u0000\u0000x$\u0001\u0000\u0000\u0000yz\u0005i\u0000\u0000"+
		"z{\u0005f\u0000\u0000{&\u0001\u0000\u0000\u0000|}\u0005t\u0000\u0000}"+
		"~\u0005h\u0000\u0000~\u007f\u0005e\u0000\u0000\u007f\u0080\u0005n\u0000"+
		"\u0000\u0080(\u0001\u0000\u0000\u0000\u0081\u0082\u0005e\u0000\u0000\u0082"+
		"\u0083\u0005l\u0000\u0000\u0083\u0084\u0005s\u0000\u0000\u0084\u0085\u0005"+
		"e\u0000\u0000\u0085*\u0001\u0000\u0000\u0000\u0086\u0087\u0005w\u0000"+
		"\u0000\u0087\u0088\u0005h\u0000\u0000\u0088\u0089\u0005i\u0000\u0000\u0089"+
		"\u008a\u0005l\u0000\u0000\u008a\u008b\u0005e\u0000\u0000\u008b,\u0001"+
		"\u0000\u0000\u0000\u008c\u008d\u0005d\u0000\u0000\u008d\u008e\u0005o\u0000"+
		"\u0000\u008e.\u0001\u0000\u0000\u0000\u008f\u0090\u0005r\u0000\u0000\u0090"+
		"\u0091\u0005e\u0000\u0000\u0091\u0092\u0005p\u0000\u0000\u0092\u0093\u0005"+
		"e\u0000\u0000\u0093\u0094\u0005a\u0000\u0000\u0094\u0095\u0005t\u0000"+
		"\u0000\u00950\u0001\u0000\u0000\u0000\u0096\u0097\u0005u\u0000\u0000\u0097"+
		"\u0098\u0005n\u0000\u0000\u0098\u0099\u0005t\u0000\u0000\u0099\u009a\u0005"+
		"i\u0000\u0000\u009a\u009b\u0005l\u0000\u0000\u009b2\u0001\u0000\u0000"+
		"\u0000\u009c\u009d\u0005i\u0000\u0000\u009d\u009e\u0005n\u0000\u0000\u009e"+
		"\u009f\u0005t\u0000\u0000\u009f4\u0001\u0000\u0000\u0000\u00a0\u00a1\u0005"+
		"b\u0000\u0000\u00a1\u00a2\u0005o\u0000\u0000\u00a2\u00a3\u0005o\u0000"+
		"\u0000\u00a3\u00a4\u0005l\u0000\u0000\u00a46\u0001\u0000\u0000\u0000\u00a5"+
		"\u00a6\u0005u\u0000\u0000\u00a6\u00a7\u0005n\u0000\u0000\u00a7\u00a8\u0005"+
		"i\u0000\u0000\u00a8\u00a9\u0005t\u0000\u0000\u00a98\u0001\u0000\u0000"+
		"\u0000\u00aa\u00ab\u0005m\u0000\u0000\u00ab\u00ac\u0005a\u0000\u0000\u00ac"+
		"\u00ad\u0005i\u0000\u0000\u00ad\u00ae\u0005n\u0000\u0000\u00ae:\u0001"+
		"\u0000\u0000\u0000\u00af\u00b0\u0005t\u0000\u0000\u00b0\u00b1\u0005r\u0000"+
		"\u0000\u00b1\u00b2\u0005u\u0000\u0000\u00b2\u00b9\u0005e\u0000\u0000\u00b3"+
		"\u00b4\u0005f\u0000\u0000\u00b4\u00b5\u0005a\u0000\u0000\u00b5\u00b6\u0005"+
		"l\u0000\u0000\u00b6\u00b7\u0005s\u0000\u0000\u00b7\u00b9\u0005e\u0000"+
		"\u0000\u00b8\u00af\u0001\u0000\u0000\u0000\u00b8\u00b3\u0001\u0000\u0000"+
		"\u0000\u00b9<\u0001\u0000\u0000\u0000\u00ba\u00c6\u00050\u0000\u0000\u00bb"+
		"\u00bd\u0005-\u0000\u0000\u00bc\u00bb\u0001\u0000\u0000\u0000\u00bc\u00bd"+
		"\u0001\u0000\u0000\u0000\u00bd\u00be\u0001\u0000\u0000\u0000\u00be\u00c2"+
		"\u0007\u0000\u0000\u0000\u00bf\u00c1\u0007\u0001\u0000\u0000\u00c0\u00bf"+
		"\u0001\u0000\u0000\u0000\u00c1\u00c4\u0001\u0000\u0000\u0000\u00c2\u00c0"+
		"\u0001\u0000\u0000\u0000\u00c2\u00c3\u0001\u0000\u0000\u0000\u00c3\u00c6"+
		"\u0001\u0000\u0000\u0000\u00c4\u00c2\u0001\u0000\u0000\u0000\u00c5\u00ba"+
		"\u0001\u0000\u0000\u0000\u00c5\u00bc\u0001\u0000\u0000\u0000\u00c6>\u0001"+
		"\u0000\u0000\u0000\u00c7\u00cb\u0007\u0002\u0000\u0000\u00c8\u00ca\u0007"+
		"\u0003\u0000\u0000\u00c9\u00c8\u0001\u0000\u0000\u0000\u00ca\u00cd\u0001"+
		"\u0000\u0000\u0000\u00cb\u00c9\u0001\u0000\u0000\u0000\u00cb\u00cc\u0001"+
		"\u0000\u0000\u0000\u00cc@\u0001\u0000\u0000\u0000\u00cd\u00cb\u0001\u0000"+
		"\u0000\u0000\u00ce\u00d0\u0007\u0004\u0000\u0000\u00cf\u00ce\u0001\u0000"+
		"\u0000\u0000\u00d0\u00d1\u0001\u0000\u0000\u0000\u00d1\u00cf\u0001\u0000"+
		"\u0000\u0000\u00d1\u00d2\u0001\u0000\u0000\u0000\u00d2\u00d3\u0001\u0000"+
		"\u0000\u0000\u00d3\u00d4\u0006 \u0000\u0000\u00d4B\u0001\u0000\u0000\u0000"+
		"\u0007\u0000\u00b8\u00bc\u00c2\u00c5\u00cb\u00d1\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}